
	package predicator

	import (
		"testing"
	)

	// Test_variable_between_int -- AUTOGENERATED DO NOT EDIT
	func Test_variable_between_int(t *testing.T) {
		instructions := [][]interface {}{[]interface {}{"load", "age"}, []interface {}{"to_int"}, []interface {}{"lit", 10}, []interface {}{"lit", 20}, []interface {}{"compare", "BETWEEN"}}
		tt := []struct{
			Name string
			Result bool
			Data   map[string]interface{} 
		}{
		
			{
				"with_no_context",
				false,
				map[string]interface {}(nil),
			},
		
			{
				"with_blank_string",
				false,
				map[string]interface {}{"age":""},
			},
		
			{
				"with_correct_int",
				true,
				map[string]interface {}{"age":15},
			},
		
			{
				"with_incorrect_int",
				false,
				map[string]interface {}{"age":5},
			},
		
			{
				"with_correct_string",
				true,
				map[string]interface {}{"age":"15"},
			},
		
			{
				"with_incorrect_string",
				false,
				map[string]interface {}{"age":"5"},
			},
		
		}
		for _, test := range tt {
			e := NewEvaluator(instructions, test.Data)
			got := e.result()
			if  got != test.Result {
				t.Logf("FAILED %s_%s expected %v got %v", "variable_between_int", test.Name, test.Result, got)
				t.Fail()
			}
			if e.stack.count > 0 {
				t.Logf("FAILED %s_%s expected empty stack",  "variable_between_int", test.Name)
				t.Fail()
			}
		}
	}
	